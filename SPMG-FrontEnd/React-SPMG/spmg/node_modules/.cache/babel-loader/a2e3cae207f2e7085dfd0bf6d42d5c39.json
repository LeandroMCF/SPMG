{"ast":null,"code":"var _jsxFileName = \"D:\\\\Senai\\\\SPMG-HTML\\\\SPMG-FrontEnd\\\\React-SPMG\\\\spmg\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { parseJwt, usuarioAurtenti } from './services/auth';\nimport './index.css';\nimport App from './Home/App';\nimport NotFound from './NotFound/notFound';\nimport Login from './Login/login';\nimport PagAdm from './PagAdm/pagAdm';\nimport PagProntuarios from './PagProntuario/pagProntuario';\nimport PagMedico from './PagMedico/pagMedico';\nimport Prontuarios from './Prontuarios/prontuarios';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PermissaoAdm = ({\n  component: Component\n}) => /*#__PURE__*/_jsxDEV(Route, {\n  render: props => // Verifica se o usuário está logado e se é Administrador\n  usuarioAurtenti() && parseJwt().role === \"1\" ?\n  /*#__PURE__*/\n  // Se sim, renderiza de acordo com a rota solicitada e permitida\n  _jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this) :\n  /*#__PURE__*/\n  // Se não, redireciona para a página de login\n  _jsxDEV(Redirect, {\n    to: \"login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n\n_c = PermissaoAdm;\n\nconst routing = /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: App\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notfound\",\n        component: NotFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tese\",\n        component: Prontuarios\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PermissaoAdm, {\n        path: \"/adm\",\n        component: PagAdm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/prontuario\",\n        component: PagProntuarios\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/medicos\",\n        component: PagMedico\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/notfound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this);\n\nReactDOM.render(routing, document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"PermissaoAdm\");","map":{"version":3,"sources":["D:/Senai/SPMG-HTML/SPMG-FrontEnd/React-SPMG/spmg/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Switch","Redirect","parseJwt","usuarioAurtenti","App","NotFound","Login","PagAdm","PagProntuarios","PagMedico","Prontuarios","reportWebVitals","PermissaoAdm","component","Component","props","role","routing","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,EAAgBC,aAAa,IAAIC,MAAjC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAgE,kBAAhE;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,iBAA1C;AAEA,OAAO,aAAP;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAGC;AAAd,CAAD,kBACnB,QAAC,KAAD;AACE,EAAA,MAAM,EAAKC,KAAK,IACd;AACAZ,EAAAA,eAAe,MAAMD,QAAQ,GAAGc,IAAX,KAAoB,GAAzC;AAAA;AACA;AACA,UAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,UAFA;AAAA;AAGA;AACA,UAAC,QAAD;AAAU,IAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,Y;;AAaN,MAAMK,OAAO,gBACX,QAAC,MAAD;AAAA,yBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEK;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEJ;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;AAiBAb,QAAQ,CAACsB,MAAT,CAAgBD,OAAhB,EAAyBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAT,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Switch, Redirect} from 'react-router-dom';\nimport { parseJwt, usuarioAurtenti } from './services/auth'\n\nimport './index.css';\n\nimport App from './Home/App';\nimport NotFound from './NotFound/notFound';\nimport Login from './Login/login'\nimport PagAdm from './PagAdm/pagAdm'\nimport PagProntuarios from './PagProntuario/pagProntuario'\nimport PagMedico from './PagMedico/pagMedico'\nimport Prontuarios from './Prontuarios/prontuarios'\n\nimport reportWebVitals from './reportWebVitals';\n\nconst PermissaoAdm = ({ component : Component  }) => (\n  <Route \n    render = { props =>\n      // Verifica se o usuário está logado e se é Administrador\n      usuarioAurtenti() && parseJwt().role === \"1\" ? \n      // Se sim, renderiza de acordo com a rota solicitada e permitida\n      <Component {...props} /> : \n      // Se não, redireciona para a página de login\n      <Redirect to = 'login' />\n    }\n  />\n);\n\nconst routing = (\n  <Router>\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/notfound\" component={NotFound} />\n        <Route path=\"/tese\" component={Prontuarios} />\n        <Route path=\"/login\" component={Login} />\n        <PermissaoAdm path=\"/adm\" component={PagAdm} />\n        <Route path=\"/prontuario\" component={PagProntuarios} />\n        <Route path=\"/medicos\" component={PagMedico} />\n        <Redirect to = \"/notfound\" />\n      </Switch>\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}